/*package UtilityForIPMMessage;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;

import org.jpos.iso.ISOException;
import org.jpos.iso.ISOMsg;
import org.jpos.iso.packager.GenericPackager;



public class UnpackMessage {

	
	private static final String Filename ="C:/Users/bcharleywilson/Desktop/H1 2018/Sample- FirstChargeback - Full.ipm";
	public static void main(String[] args) throws IOException, ISOException {
		
		String filedata;
		
		BufferedReader br = null;
		FileReader fr = null;

		try {

			//br = new BufferedReader(new FileReader(FILENAME));
			fr = new FileReader(Filename);
			FileInputStream fs= new FileInputStream(Filename);
			br = new BufferedReader(fr);
			while ((sCurrentLine = br.readLine()) != null) {
				System.out.println(sCurrentLine);
			
				GenericPackager packager = new GenericPackager("ISO8583_format.xml");
				ISOMsg isoMsg = new ISOMsg();
				isoMsg.setPackager(packager);
				

				  try
				  {
				     //convert file into array of bytes
				     fileInputStream = new FileInputStream(file);
				     fileInputStream.read(bFile);
				
				//sCurrentLine="0200B2200000001000000000000000800000201234000000010000011072218012345606A5DFGR021ABCDEFGHIJ 1234567890";
				System.out.println("Hello" +sCurrentLine.getBytes());
				isoMsg.unpack(sCurrentLine.getBytes());
				logISOMsg(isoMsg);
				
			
			}
		}
			
		catch (IOException e) {

			e.printStackTrace();

		} finally {

			}	
			
		// Create Packager based on XML that contain DE type
		

		// Print Input Data
		//String data = "0200B2200000001000000000000000800000201234000000010000011072218012345606A5DFGR021ABCDEFGHIJ 1234567890";
		//System.out.println("DATA : " + data);

		// Create ISO Message
		//ISOMsg isoMsg = new ISOMsg();
		//isoMsg.setPackager(packager);
		
		//isoMsg.unpack(sCurrentLine.getBytes());

		// print the DE list
		
		
		
	}

	
	private static void logISOMsg(ISOMsg msg) {
		System.out.println("----ISO MESSAGE-----");
		try {
			System.out.println("  MTI : " + msg.getMTI());
		
			for (int i=1;i<=msg.getMaxField();i++) {
				if (msg.hasField(i)) {
					System.out.println("    Field-"+i+" : "+msg.getString(i));
				}
			}
		} catch (ISOException e) {
			e.printStackTrace();
		} finally {
			System.out.println("--------------------");
		}

	}}

*/